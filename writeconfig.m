function writeconfig(U,n_s,v_l,eps_l,beta,omegamin,omegamax,Nomega,broadening, Nmatsub,directory,varargin)
% writes all necessary parameters for the ED-solver in input file 
% hubbard1.cfg
%
%   Args:
%       U,...,Nmatsub:  parameters for ED-solver
%       folder:         folder for input and output of ED routine
%       varargin:
%           -if empty:      using ED algorithm
%           -2 parameters:  using Lanczos algorithm
%                           -first parameter:   lancziter
%                           -second:            lanczstates

% checking wether number of elements in varargin corresponds to ED or
% Lanczos
if nargin~=11 && nargin~=13
    error('Number of arguments was %u instead of 11 for ED or 13 for Lanczos algorithm',nargin)
end

% writing elements of vectors v_l and eps_l in string, separated by spaces,
% I had no success using fprintf for the vectors themselves
vlstr='';
epslstr='';
for ii=1:length(v_l)
    vlstr=[vlstr,' ', num2str(v_l(ii))];
    epslstr=[epslstr,' ',num2str(eps_l(ii))];
end

fid=fopen(strcat(directory,'/hubbard1.cfg'),'w');

fprintf(fid,[...
    'hamiltonian { \n',...
    '\t Lorb 0 \n',...
    '\t Fk %f \n',...
    '\t gfact 0.0002 \n',...
    '\t Bz 0.0 \n',...
    '\t mu %f \n',... 
    '\t bath_simple { \n',... 
    '\t\t Nen %u \n',...
    '\t\t eb ',epslstr,'\n',...
    '\t\t tb ',vlstr,'\n',...
    '\t} \n',...
    '} \n',...
    'fock_space { \n',...
    '\t Nap_min 0 \n',...
    '\t Nap_max 2 \n',...
    '\t Np_min 0 \n',...
    '\t Np_max %u \n',...
    '} \n',...
    'GC_ensemble { \n',...
    '\t beta %f\n',...
    '} \n',...
    'method { \n'],...
    [U, U/2, n_s, 2+2*n_s, beta]);
if nargin==11
    fprintf(fid,'\t ed \n');
elseif nargin==13
    fprintf(fid,[...
        '\t lancz \n',...
        '\t N_lancz_iter %u \n',...
        '\t N_lancz_states %u \n'],...
        [varargin{1,1}, varargin{1,2}]);
end
fprintf(fid,[...
    '} \n',...
    'real_freq_axis { \n',...
    '\t omegamin %f \n',...
    '\t omegamax %f \n',...
    '\t Nomega %u \n',...
    '\t eps %f \n',...
    '} \n',...
    'matsub_freq_axis { \n',...
    '\t Nmatsub %u \n',...
    '}'],...
    [omegamin, omegamax, Nomega, broadening, Nmatsub]);

fclose(fid);
return